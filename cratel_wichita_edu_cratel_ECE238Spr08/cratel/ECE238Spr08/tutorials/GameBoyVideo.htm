<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>ECE238Spr08/tutorials/GameBoyVideo - CRATEL Wiki</title>
<link rel="stylesheet" type="text/css" href="../../../style.css">
</head>
<body>

<div id="page" lang="en" dir="ltr">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><p class="line867">
</p><h1 id="GameBoy_Video">GameBoy Video</h1>
<span class="anchor" id="line-2"></span><p class="line867"><em>distillation and clarification of gbspec.txt lines 611-789</em> <span class="anchor" id="line-3"></span>
</p><h2 id="overview">overview</h2>
<span class="anchor" id="line-4"></span><ul><li>visible content is 160x144 pixels <span class="anchor" id="line-5"></span></li><li>consists of background, window and sprites <span class="anchor" id="line-6"></span></li><li>individual pixels are not addressable. Instead the programmer describes a vocabulary of 8x8 tiles, then manipulates the video using this tile vocabulary <span class="anchor" id="line-7"></span></li><li><p class="line862">the basic GameBoy supports black, white and two shades of gray. Black is transparent <span class="anchor" id="line-8"></span></p></li><li>background, window, and sprites can each have different palettes. (see gbspec.txt lines 1712-1741) <span class="anchor" id="line-9"></span><ul><li><p class="line862">fairly irrelevant for basic GameBoy without color support <span class="anchor" id="line-10"></span></p></li></ul></li></ul><p class="line867">
</p><h3 id="Tiles">Tiles</h3>
<span class="anchor" id="line-11"></span><ul><li>each tile is 8x8 pixels <span class="anchor" id="line-12"></span></li><li><p class="line862">tiles are described in a <strong>Tile Pattern Table</strong> <span class="anchor" id="line-13"></span></p></li><li>it takes 16 bytes to describe a tile in the tile pattern table <span class="anchor" id="line-14"></span><ul><li><p class="line862">from <tt>gbspec.txt</tt> lines 673-691: <span class="anchor" id="line-15"></span><span class="anchor" id="line-16"></span><span class="anchor" id="line-17"></span><span class="anchor" id="line-18"></span><span class="anchor" id="line-19"></span><span class="anchor" id="line-20"></span><span class="anchor" id="line-21"></span><span class="anchor" id="line-22"></span><span class="anchor" id="line-23"></span><span class="anchor" id="line-24"></span><span class="anchor" id="line-25"></span><span class="anchor" id="line-26"></span><span class="anchor" id="line-27"></span><span class="anchor" id="line-28"></span><span class="anchor" id="line-29"></span><span class="anchor" id="line-30"></span><span class="anchor" id="line-31"></span><span class="anchor" id="line-32"></span><span class="anchor" id="line-33"></span></p><pre><span class="anchor" id="line-1"></span>  Tile:                                     Image:
<span class="anchor" id="line-2"></span>
<span class="anchor" id="line-3"></span>  .33333..                     .33333.. -&gt; 01111100 -&gt; $7C
<span class="anchor" id="line-4"></span>  22...22.                                 01111100 -&gt; $7C
<span class="anchor" id="line-5"></span>  11...11.                     22...22. -&gt; 00000000 -&gt; $00
<span class="anchor" id="line-6"></span>  2222222. &lt;-- digits                      11000110 -&gt; $C6
<span class="anchor" id="line-7"></span>  33...33.     represent       11...11. -&gt; 11000110 -&gt; $C6
<span class="anchor" id="line-8"></span>  22...22.     color                       00000000 -&gt; $00
<span class="anchor" id="line-9"></span>  11...11.     numbers         2222222. -&gt; 00000000 -&gt; $00
<span class="anchor" id="line-10"></span>  ........                                 11111110 -&gt; $FE
<span class="anchor" id="line-11"></span>                               33...33. -&gt; 11000110 -&gt; $C6
<span class="anchor" id="line-12"></span>                                           11000110 -&gt; $C6
<span class="anchor" id="line-13"></span>                               22...22. -&gt; 00000000 -&gt; $00
<span class="anchor" id="line-14"></span>                                           11000110 -&gt; $C6
<span class="anchor" id="line-15"></span>                               11...11. -&gt; 11000110 -&gt; $C6
<span class="anchor" id="line-16"></span>                                           00000000 -&gt; $00
<span class="anchor" id="line-17"></span>                               ........ -&gt; 00000000 -&gt; $00
<span class="anchor" id="line-18"></span>                                           00000000 -&gt; $00</pre><span class="anchor" id="line-34"></span></li></ul></li><li>A programmer can use up to two tile pattern tables <span class="anchor" id="line-35"></span><ul><li>tile pattern table 0 is at $8000-$8fff <span class="anchor" id="line-36"></span></li><li>tile pattern table 1 is at $8800-$97ff <span class="anchor" id="line-37"></span></li></ul></li><li>if using tile pattern table 0, tile 0 will be at $8000, tile 1 will be at $8010 i.e. the tiles are unsigned <span class="anchor" id="line-38"></span></li><li>if using tile pattern table 1, tile -128 will be at $8800, tile 0 will be at $9000 i.e. the tiles are signed <span class="anchor" id="line-39"></span></li></ul><p class="line867">
</p><h3 id="Background">Background</h3>
<span class="anchor" id="line-40"></span><ul><li>consists of 256x256 pixels broken into 32x32 tiles <span class="anchor" id="line-41"></span></li><li>20x18 tiles are visible at any time <span class="anchor" id="line-42"></span></li><li><p class="line862">A <strong>Background Tile Map</strong> describes where tiles as described by a tile pattern table should be placed <span class="anchor" id="line-43"></span></p><ul><li>Background Tile Map 0 is at $9800 - $9bff <span class="anchor" id="line-44"></span></li><li>Background Tile Map 1 is at $9c00 - $9fff <span class="anchor" id="line-45"></span></li><li>only one background tile map can be viewed at any time. <span class="anchor" id="line-46"></span></li><li><p class="line862">choose the background tile map with the <tt>LCDC</tt> register (see gbspec.txt lines 1525 - 1565) <span class="anchor" id="line-47"></span></p></li><li>example: if <span class="anchor" id="line-48"></span><ul><li>tile pattern table 0 selected <span class="anchor" id="line-49"></span></li><li>background tile map 0 selected <span class="anchor" id="line-50"></span></li><li>rSCX and rSCY both = 0 <span class="anchor" id="line-51"></span></li><li>$9800 contains $1 <span class="anchor" id="line-52"></span></li><li>then the upper left hand corner of the screen will show an 8x8 pixel tile described in $8010-$801f  <span class="anchor" id="line-53"></span></li></ul></li></ul></li><li><p class="line862">the background can be scrolled 1 pixel at a time using <tt>rSCX</tt> and <tt>rSCY</tt> (see gbspec.txt lines 1626-1638) <span class="anchor" id="line-54"></span></p></li></ul><p class="line867">
</p><h3 id="Sprites">Sprites</h3>
<span class="anchor" id="line-55"></span><ul><li>objects usually on top of the background which move around independent of the background <span class="anchor" id="line-56"></span><ul><li>these are the spaceships, mutants, paddles, balls, etc. that you are used to seeing in video games <span class="anchor" id="line-57"></span></li></ul></li><li>can be 8x8 (one tile) or 8x16 (two tiles, one on top of the other) <span class="anchor" id="line-58"></span></li><li>can only use the Tile Pattern table located at $8000 <span class="anchor" id="line-59"></span></li><li>Sprites are described in Object Attribute Memory (OAM) located at $fe00-$fe9f <span class="anchor" id="line-60"></span></li><li>each sprite is described using 4 bytes in OAM. For example Sprite 0 would be described as: <span class="anchor" id="line-61"></span><ul><li>$fe00: y location of sprite 0 (in pixels and offset by 16 i.e. ($fe00)=16 is the top line of the screen) <span class="anchor" id="line-62"></span></li><li>$fe01: x location of sprite 0 (in pixels and offset by 8 i.e. ($fe01)=8 is the leftmost column of the screen) <span class="anchor" id="line-63"></span></li><li>$fe02: tile(s) decribing sprite 0 i.e. if sprite is 8x8 and ($fe02)=1, sprite 0 is described by title 1 at $8010-$801f <span class="anchor" id="line-64"></span></li><li>$fe03: flags describing xflip, yflip, palette, and whether above or below background (see gbspec.txt lines 750-768) <span class="anchor" id="line-65"></span></li></ul></li></ul><p class="line867">
</p><h4 id="writing_to_OAM">writing to OAM</h4>
<span class="anchor" id="line-66"></span><p class="line874">$fe00-fe9f where the OAM is located is a special area in memory and cannot be arbitrarily written to. Instead: <span class="anchor" id="line-67"></span></p><ul><li>create and manipulate a mirror OAM in RAM at a location which is a multiple of $100 (i.e. $c000 or $c100 or $c200, etc.) <span class="anchor" id="line-68"></span></li><li>use the DMA register to copy the mirrored OAM to the actual OAM <span class="anchor" id="line-69"></span></li><li><p class="line862">the routine to do this <strong>must</strong> be located in high ram $ff80-fffe as the GameBoy cannot access lower RAM during the transfer <span class="anchor" id="line-70"></span></p></li><li>the copying routine must be called for OAM to be updated <span class="anchor" id="line-71"></span></li><li>an easy way to automate the copying is to use the vblank interrupt <span class="anchor" id="line-72"></span><ul><li><p class="line862">the vblank interrupt occurs every time the GameBoy screen is refreshed. That's about 60x/second. <span class="anchor" id="line-73"></span></p></li><li>by using the vblank interrupt to update the sprite OAM, the programmer can arbitrarily write to the mirrored OAM and be confident that the actual OAM will be updated without further intervention. <span class="anchor" id="line-74"></span></li></ul></li><li><p class="line862">see an example of this technique using the vblank interrupt in <a href="../software/index.htm">hello-sprite.asm</a>, and see gbspec.txt lines 1659-1711 <span class="anchor" id="line-75"></span></p></li></ul><p class="line867">
</p><h3 id="Window">Window</h3>
<span class="anchor" id="line-76"></span><ul><li>like the background, but not scrollable and only the size of the viewing area <span class="anchor" id="line-77"></span></li></ul><span class="anchor" id="bottom"></span></div><p id="pageinfo" class="info" lang="en" dir="ltr">ECE238Spr08/tutorials/GameBoyVideo  (last edited 2010-08-04 16:53:45 by <span title="??? @ localhost[127.0.0.1]">localhost</span>)</p>

<div id="pagebottom"></div>
</div>

</body>
</html>