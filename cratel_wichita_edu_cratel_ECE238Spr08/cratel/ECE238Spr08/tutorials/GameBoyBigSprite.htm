<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>ECE238Spr08/tutorials/GameBoyBigSprite - CRATEL Wiki</title>
<link rel="stylesheet" type="text/css" href="../../../style.css">
</head>
<body>

<div id="page" lang="en" dir="ltr">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><p class="line867">
</p><h1 id="BigSprite">BigSprite</h1>
<span class="anchor" id="line-2"></span><p class="line867">BigSprite is the beginnings of a library intended to make it easier to manipulate sprites. The purpose of BigSprite is: <span class="anchor" id="line-3"></span></p><ul><li>to easily combine up to 22 8x8 sprites into any size or shape you wish <span class="anchor" id="line-4"></span></li><li><p class="line862">once combined, the 8x8 sprites can function as one BigSprite, which can be easily moved as a unit etc. <span class="anchor" id="line-5"></span></p></li><li><p class="line891">BigSprite has built-in collision detection of other BigSprites and of background tiles using bounding boxes <span class="anchor" id="line-6"></span></p></li></ul><p class="line862">You don't have to know how BigSprite works to make good use of it. Just follow these directions and use the functions as described. You can also look at <a href="../software/index.htm">hello-bs.asm</a> as an example. <span class="anchor" id="line-7"></span>
</p><h2 id="overview">overview</h2>
<span class="anchor" id="line-8"></span><ul><li><p class="line862">The BigSprite library reserves space for 32 BigSprites located from memory location $DC00 to $DFFF.  <span class="anchor" id="line-9"></span></p></li><li><p class="line862">Each BigSprite takes 32 bytes to describe. The bytes are as follows: <span class="anchor" id="line-10"></span></p><ul><li>1 byte: sprite ID <span class="anchor" id="line-11"></span><ul><li><p class="line862">the ID can be any 1-byte number you want, but should be unique for each BigSprite <span class="anchor" id="line-12"></span></p></li><li><p class="line862">since there are a maximum of 32 BigSprites, it would be possible to use 2 extra bits in this byte as flags <span class="anchor" id="line-13"></span></p></li></ul></li><li><p class="line862">2 bytes: location of BigSprite in upper left hand corner on screen (x,y) <span class="anchor" id="line-14"></span></p></li><li>4 bytes: bounding boxes (lowx, lowy, highx, highy) <span class="anchor" id="line-15"></span></li><li>2 bytes: sprite dimensions in terms of 8x8 sprites (x # of sprites, y # of sprites) <span class="anchor" id="line-16"></span></li><li><p class="line862">22 bytes: list of sprites used. (<em>must be 22 bytes even if 22 sprites aren't used</em>) <span class="anchor" id="line-17"></span></p></li><li>1 byte: flags (not yet implemented) <span class="anchor" id="line-18"></span></li></ul></li><li><p class="line862">blank BigSprites are loaded with <tt>BSEMPTY</tt> (currently $ff) <span class="anchor" id="line-19"></span></p></li><li><p class="line862">for simplicity, the BigSprite library creates 32 8x8 sprites numbered 0 through 31 and sets each of these sprites to its corresponding tile number i.e. sprite 0 is loaded with tile 0, sprite 1 with tile 1, etc.  <span class="anchor" id="line-20"></span></p></li></ul><p class="line867">
</p><h2 id="usage">usage</h2>
<span class="anchor" id="line-21"></span><p class="line867">
</p><h3 id="create_your_tiles">create your tiles</h3>
<span class="anchor" id="line-22"></span><ul><li>create tiles for your sprite using GBDT or whatever <span class="anchor" id="line-23"></span></li><li>design your tiles using any dimensions you wish, but for simplicity export them as 8x8 <span class="anchor" id="line-24"></span></li><li><p class="line862">it's easiest if you number your tiles for BigSprite starting with tile 0 <span class="anchor" id="line-25"></span></p></li><li><p class="line862">it is easiest if there is a unique tile for every part of every BigSprite <span class="anchor" id="line-26"></span></p><ul><li>if a particular tile is needed more than once for your design, duplicate it <span class="anchor" id="line-27"></span></li><li><p class="line862">if a particular BigSprite will appear more than 1 time, duplicate all of its tiles <span class="anchor" id="line-28"></span></p></li></ul></li></ul><p class="line867">
</p><h3 id="edit_bigsprite.asm">edit bigsprite.asm</h3>
<span class="anchor" id="line-29"></span><ul><li><p class="line862">replace the example hardcoded BigSprite descriptions at the beginning of the file with your hardcoded BigSprite descriptions <span class="anchor" id="line-30"></span></p><ul><li><p class="line862">each description needs to be 32 bytes and needs to follow exactly the byte layout described above (also shown in the example descriptions inside <tt>bigsprite.asm</tt>) <span class="anchor" id="line-31"></span></p></li></ul></li><li><p class="line862">edit the number of hardcoded BigSprite descriptions EQUed with <tt>HARDCODEDBSES</tt> <span class="anchor" id="line-32"></span></p></li></ul><p class="line867">
</p><h3 id="edit_your_code">edit your code</h3>
<span class="anchor" id="line-33"></span><ul><li><p class="line862">add <tt>INCLUDE&nbsp;"bigsprite.asm"</tt> in your code after a section statement. <span class="anchor" id="line-34"></span></p><ul><li><p class="line862">One good place for it might be right after <tt>INCLUDE&nbsp;"memory.asm"</tt> if you have that line <span class="anchor" id="line-35"></span></p></li><li><p class="line891"><tt>bigsprite.asm</tt> requires <tt>hello-sprite.inc</tt> so have the most recent version of that in your path as well <span class="anchor" id="line-36"></span></p></li></ul></li><li><p class="line862">at the end of your main code initialization add <span class="anchor" id="line-37"></span></p><pre><span class="anchor" id="line-1"></span>        INIT_BS</pre><span class="anchor" id="line-38"></span><ul><li><p class="line862">this calls a macro which sets up the BigSprite system <span class="anchor" id="line-39"></span></p></li></ul></li></ul><p class="line867">
</p><h3 id="function_calls_and_macros_in_the_BigSprite_library">function calls and macros in the BigSprite library</h3>
<span class="anchor" id="line-40"></span><ul><li><span class="anchor" id="line-41"></span><pre><span class="anchor" id="line-1-1"></span>        INIT_BS</pre><p class="line862">Initialize the BigSprite system<span class="anchor" id="line-42"></span></p><ul><li>initializes sprites 0-31 and assigns them to tiles 0-31 <span class="anchor" id="line-43"></span></li><li><p class="line862">loads hardcoded BigSprites <span class="anchor" id="line-44"></span></p></li><li><p class="line862">initializes the remaining BigSprite list as empty <span class="anchor" id="line-45"></span></p></li><li>add to the end of your initialization code, after the tiles are loaded and before the main loop <span class="anchor" id="line-46"></span></li></ul></li><li><span class="anchor" id="line-47"></span><pre><span class="anchor" id="line-1-2"></span>        SET_BS_LOC        &lt;BS ID&gt;,&lt;X coord&gt;,&lt;Y coord&gt;</pre><p class="line862">set the X and Y coords of a specified BigSprite<span class="anchor" id="line-48"></span></p><ul><li>input: <span class="anchor" id="line-49"></span><ul><li>BS ID can be any 8 bit number or any 8 bit register (a,b,c,d,e,h,l) <span class="anchor" id="line-50"></span></li><li>X coord and Y coord can be any 8 bit number or any 8 bit register except h or l <span class="anchor" id="line-51"></span></li></ul></li></ul></li><li><span class="anchor" id="line-52"></span><pre><span class="anchor" id="line-1-3"></span>        call              get_bs_param</pre><p class="line862">get coordinates of BigSprite location or of any corner of a bounding box<span class="anchor" id="line-53"></span></p><ul><li>input: <span class="anchor" id="line-54"></span><ul><li><p class="line862">a = BigSprite ID <span class="anchor" id="line-55"></span></p></li><li>b = specified parameter: one of the following constants: <span class="anchor" id="line-56"></span><ul><li><p class="line891"><tt>BB_UPPER_LEFT</tt>: upper left corner of bounding box <span class="anchor" id="line-57"></span></p></li><li><p class="line891"><tt>BB_UPPER_RIGHT</tt>: upper right corner of bounding box <span class="anchor" id="line-58"></span></p></li><li><p class="line891"><tt>BB_LOWER_LEFT</tt>: lower left corner of bounding box <span class="anchor" id="line-59"></span></p></li><li><p class="line891"><tt>BB_LOWER_RIGHT</tt>: lower right corner of bounding box <span class="anchor" id="line-60"></span></p></li><li><p class="line891"><tt>BS_LOCATION</tt>: BigSprite screen location <span class="anchor" id="line-61"></span></p></li></ul></li></ul></li><li>output: d: x coordinate (pixels), e: y coordinate (pixels) <span class="anchor" id="line-62"></span></li></ul></li><li><span class="anchor" id="line-63"></span><pre><span class="anchor" id="line-1-4"></span>        call              BSCheck4Clison</pre><p class="line862">test if 2 BigSprites are colliding<span class="anchor" id="line-64"></span></p><ul><li><p class="line862">input: h = BigSprite 1 ID, l = BigSprite 2 ID <span class="anchor" id="line-65"></span></p></li><li><p class="line862">output: c flag is set if BigSprites are colliding, otherwise is reset <span class="anchor" id="line-66"></span></p></li></ul></li><li><span class="anchor" id="line-67"></span><pre><span class="anchor" id="line-1-5"></span>        call              bs_get_background_tile</pre>return tile # of background tile touching specified corner of a bounding box<span class="anchor" id="line-68"></span><ul><li><p class="line862">a = BigSprite ID <span class="anchor" id="line-69"></span></p></li><li>b = specified parameter: one of the following constants: <span class="anchor" id="line-70"></span><ul><li><p class="line891"><tt>BB_UPPER_LEFT</tt>: upper left corner of bounding box <span class="anchor" id="line-71"></span></p></li><li><p class="line891"><tt>BB_UPPER_RIGHT</tt>: upper right corner of bounding box <span class="anchor" id="line-72"></span></p></li><li><p class="line891"><tt>BB_LOWER_LEFT</tt>: lower left corner of bounding box <span class="anchor" id="line-73"></span></p></li><li><p class="line891"><tt>BB_LOWER_RIGHT</tt>: lower right corner of bounding box <span class="anchor" id="line-74"></span></p></li></ul></li><li>hl: Background tile map location in memory. Will always be either _SCRN0 ($9800) or _SCRN1 ($9C00) <span class="anchor" id="line-75"></span></li></ul><ul><li>output: a = tile number hitting specified corner <span class="anchor" id="line-76"></span></li><li><p class="line891"><strong>note:</strong> in its current implementation, this routine waits for VBLANK, since it cannot read video memory at any other time. This could (should?) be rewritten at some point to instead integrate with the VBLANK interrupt. <span class="anchor" id="line-77"></span></p></li></ul></li></ul><p class="line867">
</p><h3 id="function_calls_and_macros_associated_with_the_BigSprite_library">function calls and macros associated with the BigSprite library</h3>
<span class="anchor" id="line-78"></span><ul><li><span class="anchor" id="line-79"></span><pre><span class="anchor" id="line-1-6"></span>        SetSpriteTileNum    &lt;sprite # or name&gt;,&lt;tile #&gt;</pre> set tile # of a specified sprite<span class="anchor" id="line-80"></span><ul><li><p class="line862">technically, <tt>SetSpriteTileNum</tt> is not part of the BigSprite library, but is instead part of <tt>sprite.inc</tt>, a dependency of BigSprite. It is mentioned here because of its obvious use with the BigSprite library. By design, the BigSprite library loads sprites 0-31 with corresponding tiles 0-31. This means that sprite 0 is automatically loaded with tile 0, sprite 1 is automatically loaded with tile 1, etc. However, using <tt>SetSpriteTileNum</tt>, the sprites can be loaded with other tiles instead. <span class="anchor" id="line-81"></span></p></li><li><p class="line862">always call this macro AFTER calling <tt>INIT_BS</tt>, since <tt>INIT_BS</tt> will redefine each sprite to be associated with its current tile # as explained above. <span class="anchor" id="line-82"></span></p></li><li><p class="line891">&lt;sprite # or name&gt; may be either a sprite # (0,1,2,etc.) or a name of a sprite as defined by <tt>SpriteAttr</tt> in <tt>sprite.inc</tt> <span class="anchor" id="line-83"></span></p></li></ul></li></ul><span class="anchor" id="bottom"></span></div><p id="pageinfo" class="info" lang="en" dir="ltr">ECE238Spr08/tutorials/GameBoyBigSprite  (last edited 2010-08-04 16:53:33 by <span title="??? @ localhost[127.0.0.1]">localhost</span>)</p>

<div id="pagebottom"></div>
</div>

</body>
</html>